@*This is the query page*@
@page "/fetchdata"
@using BlazorInputFile
@using Models
@using Data
@using Services
@using Parser
@using MongoDB.Bson
@using MongoDB.Driver
@using System.Diagnostics
@using Microsoft.JSInterop

@inject DataCalculatorDbContext _context 
@inject IFileHandler _fileHandler
@inject MetaDataDbContext _md_context
@inject IJSRuntime JS

<h3>Query Data</h3>

@*<Chart Id="bar1" 
       Type="@Chart.ChartType.Bar" 
       Data="@(new[] { "10", "9"})"
       BackgroundColor="yellow"
       Labels = "@(new[] {"Fail", "Ok"})"></Chart> *@

<div id="query-field">
    <span id="year-field">
            <label>
                Enter start year:
                <input id="year-input" @bind="startDate">
            </label>
     </span>
     <span id="year-field">
            <label>
                 Enter end year:
                 <input id ="year-input" @bind="endDate">
            </label>
           
     </span>
</div>

@if (c_state == 1)
{
            int i = 0;
            List<string> label_data = new List<string>();
            List<string> q_data = new List<string>();
            
            foreach (List<string[]> display in displays)
            {
                //newChart();
                q_data.Clear();
                label_data.Clear();

                Random rnd = new Random();
                int ind_num = rnd.Next(501);
                string id_num = "bar" + ind_num.ToString();

                for (int k = 0; k < display.Count; k++)
                {

                    q_data.Add(display[k][0].ToString());
                    label_data.Add(display[k][1].ToString());

                }

                if (i == fileNames.Count)
                {
                    break;
                }
                string yr = GetYear(i);
                
                string m_content = $"Top Vulnerabilties in {yr}";
                <div id="chart">
                <h5>@m_content</h5>
                    <Chart Id="@id_num"
                       Type="@Chart.ChartType.Bar"
                       Data="@label_data.ToArray()"
                       BackgroundColor = "Purple"
                       Labels="@q_data.ToArray()"></Chart>
                </div>
                i++;
                //newChart();

            }
}

<div id="query-form">
    <div id="query-form-child">
        <h4>Paradise</h4>
        <button class="btn btn-primary" id="queryButton" @onclick= "() => MetaDataQuery(startDate, endDate, bucketParadise)">Query Data</button>
        <p>@message</p>
        <p>@QueryTimeMessage</p>
        <p>@QuerySizeMessage</p>
        @if (state == 1)
        {
           

         <h4>Query History</h4>
         <table class='table'>
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>File Size (in Bytes)</th>
                    <th>Current Query Time</th>
                    <th>Previous Query Time</th>
                </tr>
            </thead>
            <tbody>

            @for (int j = 0; j < fileNames.Count; j++) 
            {
                    <tr>
                            <td>@fileNames[j]</td>
                            <td>@fileSizes[j]</td>
                            <td>@currentQueryTimes[j]</td>
                            <td>@queryTimeHistory[j]</td>
                    </tr>
            }
                
            </tbody>
        </table>
        }
    </div>
    <div id="query-form-child">
        <h4>AWS Glue</h4>
        <button class="btn btn-primary" id="queryButton" @onclick= "() => MetaDataQuery(startDate, endDate, bucketGlue)">Query Data</button>
        <p>@g_message</p>
        <p>@g_QueryTimeMessage</p>
        <p>@g_QuerySizeMessage</p>
        @if (g_state == 1)
        {
@*            int i = 0;
            List<string> label_data = new List<string>();
            List<string> q_data = new List<string>();
            
            foreach (List<string[]> display in g_Displays)
            {
                q_data.Clear();
                label_data.Clear();

                Random rnd = new Random();
                int ind_num = rnd.Next(502, 1001);
                string id_num = "bar" + ind_num.ToString();

                for (int k = 0; k < display.Count; k++)
                {

                    q_data.Add(display[k][0].ToString());
                    label_data.Add(display[k][1].ToString());

                }
                string yr = GetYear(i);
                string m_content = $"Top Vulnerabilties in {yr}";
                <h5>@m_content</h5>
                <Chart Id="@id_num"
                       Type="@Chart.ChartType.Bar"
                       Data="@label_data.ToArray()"
                       BackgroundColor = "Purple"
                       Labels="@q_data.ToArray()"></Chart>
                i++;

            }*@

              <h4>Query History</h4>
         <table class='table'>
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>File Size (in Bytes)</th>
                    <th>Current Query Time</th>
                    <th>Previous Query Time</th>
                </tr>
            </thead>
            <tbody>

            @for (int j = 0; j < fileNames.Count; j++) 
            {
                    <tr>
                            <td>@fileNames[j]</td>
                            <td>@fileSizes[j]</td>
                            <td>@g_currentQueryTimes[j]</td>
                            <td>@g_QueryTimeHistory[j]</td>
                    </tr>
            }
                
            </tbody>
        </table>

        }
    </div>
  
</div>


    
