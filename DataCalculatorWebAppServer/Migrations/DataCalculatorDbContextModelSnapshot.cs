// <auto-generated />
using System;
using DataCalculatorWebAppServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataCalculatorWebAppServer.Migrations
{
    [DbContext(typeof(DataCalculatorDbContext))]
    partial class DataCalculatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DataCalculatorWebAppServer.Models.FileSendData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileSendData");
                });

            modelBuilder.Entity("DataCalculatorWebAppServer.Models.FileStorageData", b =>
                {
                    b.Property<int>("FileSendDataId")
                        .HasColumnType("int");

                    b.Property<string>("FileUri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileSendDataId");

                    b.ToTable("FileStorageData");
                });

            modelBuilder.Entity("DataCalculatorWebAppServer.Models.FileStorageData", b =>
                {
                    b.HasOne("DataCalculatorWebAppServer.Models.FileSendData", "FileSendData")
                        .WithMany()
                        .HasForeignKey("FileSendDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileSendData");
                });
#pragma warning restore 612, 618
        }
    }
}
